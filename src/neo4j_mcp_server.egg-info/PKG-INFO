Metadata-Version: 2.2
Name: neo4j-mcp-server
Version: 1.0.0
Summary: MCP server for Neo4j database connectivity with cross-platform support
Author: Neo4j MCP Server
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: mcp>=1.0.0
Requires-Dist: neo4j>=5.15.0
Requires-Dist: rich>=13.0.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: asyncio-mqtt>=0.11.1
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Neo4j MCP Server

A Model Context Protocol (MCP) server for Neo4j database connectivity with cross-platform support, specifically designed to bridge WSL environments to Windows-hosted Neo4j instances.

## Features

- Cross-platform connectivity (WSL to Windows)
- Auto-detection of WSL environment
- Connection fallback mechanisms
- Complete Neo4j schema introspection
- Read and write Cypher query execution
- Comprehensive error handling and logging

## Installation

```bash
pip install -e .
```

## Quick Start

```bash
neo4j-mcp-server
```

## Configuration

Set environment variables:

```bash
export NEO4J_URI="neo4j://127.0.0.1:7687"
export NEO4J_USER="neo4j"
export NEO4J_PASSWORD="password"
export NEO4J_DATABASE="neo4j"
```

## MCP Tools

- `get_neo4j_schema`: Get database schema information
- `read_neo4j_cypher`: Execute read-only Cypher queries
- `write_neo4j_cypher`: Execute write Cypher queries

## Testing

```bash
pytest tests/ -v
```
